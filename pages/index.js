import { useRef, useContext } from "react";
import { useRouter } from "next/router";

import Image from "next/image";

import Link from "next/link";
import PokeContext from "../context/poke-context";

import Head from "next/head";
import styles from "../styles/Home.module.css";

function Home({ pokemonList }) {
  let filteredList = pokemonList.filter(
    (pokemon) => !pokemon.name.includes("-")
  );
  filteredList.forEach(
    (pokemon) =>
      (pokemon.name = pokemon.name[0].toUpperCase() + pokemon.name.slice(1))
  );

  let optionsDisplay = filteredList.map((pokemon, index) => (
    <option key={index} value={pokemon.name}>
      {pokemon.name}
    </option>
  ));

  const pokeSelection = useRef();

  const router = useRouter();

  const pokeCtx = useContext(PokeContext);

  function openPokemonPage(event) {
    event.preventDefault();
    const pokemonName = pokeSelection.current.value;
    console.log(pokemonName);

    let url;
    filteredList.forEach((pokemon) => {
      if (pokemon.name === pokemonName) {
        console.log(pokemon);
        pokeCtx.setPokemonTarget(pokemon);
        url = pokemon.url;
      }
    });
    router.push({
      pathname: "/" + pokemonName,
      query: { pokemonName: pokemonName, url: url },
    });
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Pokemon Popularity Tracker</title>
        <meta name="description" content="Generated by create next app" />\{" "}
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Pokemon Popularity Tracker</h1>
        <h2 className={styles.subtitle}>{`Who's Hot and Who Isn't?`}</h2>

        <form className={styles["pokemon-selector"]} onSubmit={openPokemonPage}>
          <label htmlFor="pokemon-select" className={styles["selector-label"]}>
            Pick a Pocket Monster
          </label>
          <input
            className={styles.input}
            id="pokemon-select"
            list="pokemon"
            ref={pokeSelection}
          />
          <datalist className={styles.dataList} id="pokemon">
            {optionsDisplay}
          </datalist>
          <button className={styles["search-button"]}>
            Engage Popularity Tracker
          </button>
        </form>
        <Image
          src="https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/back/132.png"
          alt="ditto sprite"
          height={100}
          width={100}
        />
      </main>

      <footer className={styles.footer}></footer>
    </div>
  );
}

export async function getStaticProps() {
  try {
    const result = await fetch("https://pokeapi.co/api/v2/pokemon/?limit=1118");
    const pokemonData = await result.json();
    const pokemonList = pokemonData.results;

    return {
      props: {
        pokemonList,
      },
    };
  } catch (error) {
    console.log(error);
  }
}
export default Home;
